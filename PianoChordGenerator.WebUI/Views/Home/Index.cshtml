<!DOCTYPE html>
<html>
<!--
    Created by EncouragingApps.com 2020
    Developer: Isaac Ortiz
-->
<head>
    <style>

        td {
            vertical-align: middle;
        }

        .canvas {
            border: 1px solid #d3d3d3;
            vertical-align: middle;
        }

        .radio {
            vertical-align: middle;
        }

        .liststyle {
            width: 200px;
        }

        .addRemoveButtons {
            width: 200px
        }
    </style>
</head>
<body>
    <div id="divChordBuilderWorkspace">
        <div id="divMsg"></div>
        <table>
            <tr>
                <td>
                    <b>Select a Chord:</b>
                    <br />
                    @*<select name="chords" id="dropdownChords" onchange="SetChords();">
                            <option value="None">(None)</option>
                            <option value="C Major">C Major</option>
                        </select>*@

                    @Html.DropDownList("dropdownChords",
                                      (IEnumerable<SelectListItem>)ViewBag.ChordList,
                                      new { @onchange = "SetChords();" })

                    <br />
                    <br />

                    <p><b>Root Position</b></p>
                    <input type="radio" id="radioRoot" name="radioInversion" value="root" class="radio" />
                    <canvas id="canvasPianoChart1" width="281" height="78" class="canvas">
                        Your browser does not support the HTML5 canvas tag.
                    </canvas>

                    <br />

                    <p><b>1st Inversion</b></p>
                    <input type="radio" id="radioFirst" name="radioInversion" value="first" />
                    <canvas id="canvasPianoChart2" width="281" height="78" class="canvas">
                        Your browser does not support the HTML5 canvas tag.
                    </canvas>

                    <br />

                    <p><b>2nd Inversion</b></p>
                    <input type="radio" id="radioFirst" name="radioInversion" value="second" />
                    <canvas id="canvasPianoChart3" width="281" height="78" class="canvas">
                        Your browser does not support the HTML5 canvas tag.
                    </canvas>
                </td>
                <td>
                    <input type="button" id="buttonAddChord" value="Add Chord >>"
                           onclick="AddChord();" class="addRemoveButtons" />
                    <br />
                    <br />
                    <input type="button" id="buttonRemoveChord" value="<< Remove Chord" class="addRemoveButtons" />
                </td>
                <td>
                    <select id="listboxSelectedChords" name="listboxSelectedChords" multiple size="10"
                            width="30px" class="liststyle"></select>
                </td>
            </tr>
        </table>

    </div>


    <script>
        var whitekeycolor = "#FF0000";
        var blackkeycolor = "#000000";

        var pianoChart1 = GetElementById("canvasPianoChart1");
        var pianoChart2 = GetElementById("canvasPianoChart2");
        var pianoChart3 = GetElementById("canvasPianoChart3");

        RenderPianoKeyboard(pianoChart1);
        RenderPianoKeyboard(pianoChart2);
        RenderPianoKeyboard(pianoChart3);


        function SetChords() {
            var selectedChord = GetElementById("dropdownChords");

            RenderPianoKeyboard(pianoChart1, selectedChord.value, "Root");
            RenderPianoKeyboard(pianoChart2, selectedChord.value, "First");
            RenderPianoKeyboard(pianoChart3, selectedChord.value, "Second");
        }

        function AddChord() {

            var listofChords = GetElementById("listboxSelectedChords");
            var selectedChord = GetElementById("dropdownChords");
            var opt = document.createElement("option");
            opt.text = selectedChord.options[selectedChord.selectedIndex].text;
            opt.value = selectedChord.value;


            if (selectedChord.value == "maj" || selectedChord.value == "min") {
                toastr.warning("Please select a chord.");
                return false;
            }
            if (DoesChordExist(selectedChord.value)) {
                toastr.warning("This chord already exists.");
                return false;
            }
            if (listofChords.options.length > 10) {
                toastr.warning("Only 10 chords are allowed.")
                return false;
            }

            listofChords.options.add(opt);

            toastr.info("Chord successfully added.")

            return true;

        }

        function DoesChordExist(ChordToCheck) {
            var list = GetElementById("listboxSelectedChords");

            for (var i = 0; i < list.options.length; ++i) {
                if (list.options[i].value == ChordToCheck) {
                    return true;
                }
            }

        }

        function RenderPianoKeyboard(canvasToRender, selectedChord, inversion) {
            var ctx = canvasToRender.getContext("2d");
            var WHITEKEY_H = 75;
            var BLACKKEY_H = 43;
            var BLACKKEY_W = 15;
            var BLACKKEY_Y = 0;
            var WHITEKEY_Y = 0;

            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
            ctx.beginPath();

            var counter = 0;

            //Render Whitekeys
            ctx.beginPath;
            for (i = 0; i < 14; i++) {
                counter += 20;


                ctx.rect(0, WHITEKEY_Y, counter, WHITEKEY_H);
                ctx.fillStyle = whitekeycolor;
            }

            //Render Blackkeys
            ctx.beginPath;
            ctx.fillStyle = blackkeycolor;
            var xposList = [12, 34, 72, 92, 112, 154, 174, 214, 234, 254];

            for (i = 0; i < xposList.length; i++) {
                ctx.fillRect(xposList[i], BLACKKEY_Y, BLACKKEY_W, BLACKKEY_H);
            }

            ctx.stroke();

            //Render Indicators
            var circle = new Path2D();

            ctx.beginPath;
            for (i = 0; i < 14; i++) {

                //Render White Key Indicators
                if (selectedChord != null || selectedChord != undefined) {

                    switch (i + 1) {
                        case 1:
                            if (selectedChord == "amin" &&
                                inversion == "First") {
                                circle.arc(10, 60, 7, 0, 2 * Math.PI);
                            }     
                            if ((selectedChord == "cmaj" ||
                                selectedChord == "cmin") &&
                                inversion == "Root") {
                                circle.arc(10, 60, 7, 0, 2 * Math.PI);
                            }           
                            if ((selectedChord == "gsharpmaj" ||
                                selectedChord == "aflatmaj") && inversion == "First") {
                                circle.arc(10, 60, 7, 0, 2 * Math.PI);
                            }                            
                            
                            break;
                        case 2:      
                            if ((selectedChord == "asharpmaj" ||
                                selectedChord == "bflatmaj") && inversion == "First") {
                                circle.arc(30, 60, 7, 0, 2 * Math.PI);
                            }   
                            if (selectedChord == "bmin" && inversion == "First") {
                                circle.arc(30, 60, 7, 0, 2 * Math.PI);
                            }
                            if ((selectedChord == "dmaj" || selectedChord == "dmin")
                                && inversion == "Root") {
                                circle.arc(30, 60, 7, 0, 2 * Math.PI);
                            }
                            break;
                        case 3:
                            if ((selectedChord == "amaj" ||
                                selectedChord == "amin") &&
                                (inversion == "First" || inversion == "Second")) {
                                circle.arc(50, 60, 7, 0, 2 * Math.PI);
                            }    
                            if (selectedChord == "cmaj" &&
                                (inversion == "Root" || inversion == "First" )) {
                                circle.arc(50, 60, 7, 0, 2 * Math.PI);
                            }                  
                            if ((selectedChord == "csharpmin" ||
                                selectedChord == "dflatmin") &&
                                (inversion == "Root" || inversion == "First")) {
                                circle.arc(50, 60, 7, 0, 2 * Math.PI);
                            }                         
                            if ((selectedChord == "emaj" ||
                                selectedChord == "emin") &&
                                inversion == "Root") {
                                circle.arc(50, 60, 7, 0, 2 * Math.PI);
                            }
                            
                          
                            break;
                        case 4:
                            if ((selectedChord == "asharpmin" ||
                                 selectedChord == "asharpmaj" ||
                                selectedChord == "bflatmin" ||
                                selectedChord =="bflatmaj") &&
                                (inversion == "First" || inversion == "Second")) {
                                circle.arc(70, 60, 7, 0, 2 * Math.PI);
                            }
                            if ((selectedChord == "csharpmaj" ||
                                selectedChord == "dflatmaj")
                                && (inversion=="Root" || inversion=="First")) {
                                circle.arc(70, 60, 7, 0, 2 * Math.PI);
                            }
                            if (selectedChord == "dmin"
                                && (inversion == "Root" || inversion == "First")) {
                                circle.arc(70, 60, 7, 0, 2 * Math.PI);
                            }
                            if ((selectedChord == "fmaj" || selectedChord == "fmin")
                                && inversion == "Root") {
                                circle.arc(70, 60, 7, 0, 2 * Math.PI);
                            }                            
                                                   
                            break;
                        case 5:
                            if ((selectedChord == "cmaj" ||
                                selectedChord == "cmin") &&
                                (inversion == "Root" ||
                                 inversion == "First" ||
                                 inversion == "Second"))
                            {
                                circle.arc(90, 60, 7, 0, 2 * Math.PI);
                            }                        
                            if ((selectedChord == "dsharpmaj" ||
                                selectedChord == "eflatmaj") &&
                                (inversion == "Root" || inversion == "First")) {
                                circle.arc(90, 60, 7, 0, 2 * Math.PI);
                            }                            
                            if (selectedChord == "emin" &&
                                (inversion == "Root" || inversion == "First")) {
                                circle.arc(90, 60, 7, 0, 2 * Math.PI);
                            }
                            if ((selectedChord == "gmaj" ||
                                selectedChord == "gmin") && inversion == "Root") {
                                circle.arc(90, 60, 7, 0, 2 * Math.PI);
                            }                         
                            break;
                        case 6:
                            if ((selectedChord == "amaj" ||
                                selectedChord == "amin") &&
                                (inversion == "Root" || inversion == "First" || inversion == "Second")) {
                                circle.arc(110, 60, 7, 0, 2 * Math.PI);
                            }
                            if ((selectedChord == "dmaj" || selectedChord=="dmin") &&
                                (inversion=="Root" || inversion=="First" || inversion=="Second")) {
                                circle.arc(110, 60, 7, 0, 2 * Math.PI);
                            }                                                              
                            if (selectedChord == "fmaj" &&
                                (inversion=="Root" || inversion=="First")) {
                                circle.arc(110, 60, 7, 0, 2 * Math.PI);
                            }
                            if ((selectedChord == "fsharpmin" ||
                                 selectedChord == "gflatmin") &&
                                (inversion == "Root" || inversion == "First")) {
                                circle.arc(110, 60, 7, 0, 2 * Math.PI);
                            }
                           
                            break;
                        case 7:
                            if ((selectedChord == "bmaj" ||
                                 selectedChord == "bmin") &&
                                (inversion == "Root" || inversion == "First" || inversion == "Second")) {
                                circle.arc(130, 60, 7, 0, 2 * Math.PI);
                            }                            
                           // if ((selectedChord == "dsharpmaj" ||
                           //     selectedChord == "eflatmaj") && inversion == "Root") {
                           //     circle.arc(130, 60, 7, 0, 2 * Math.PI);
                           // }
                            if ((selectedChord == "emaj" ||
                                 selectedChord == "emin") &&
                                (inversion=="Root" || inversion=="First" || inversion=="Second")) {
                                circle.arc(130, 60, 7, 0, 2 * Math.PI);
                            }                           
                            if (selectedChord == "gmaj" &&
                                (inversion == "Root" ||
                                 inversion == "First")) {
                                circle.arc(130, 60, 7, 0, 2 * Math.PI);
                            }                                                       
                            if ((selectedChord == "gsharpmin" ||
                                selectedChord == "aflatmin") &&
                                (inversion == "Root" || inversion == "First" || inversion == "Second")) {
                                circle.arc(130, 60, 7, 0, 2 * Math.PI);
                            }

                            break;
                        case 8:
                            if ((selectedChord == "cmaj" ||
                                 selectedChord == "cmin") &&
                                (inversion == "First" || inversion=="Second")) {
                                circle.arc(150, 60, 7, 0, 2 * Math.PI);
                            }
                            if ((selectedChord == "fmaj" ||
                                 selectedChord == "fmin") &&
                                (inversion == "Root" ||
                                 inversion == "First" ||
                                 inversion == "Second")) {
                                circle.arc(150, 60, 7, 0, 2 * Math.PI);
                            }                            
                            if ((selectedChord == "gsharpmaj" ||
                                selectedChord == "aflatmaj") &&
                                (inversion == "Root" || inversion == "Second")) {
                                circle.arc(150, 60, 7, 0, 2 * Math.PI);
                            }                                                        
                            if (selectedChord == "amin" &&
                                (inversion == "Root" || inversion == "Second")) {
                                circle.arc(150, 60, 7, 0, 2 * Math.PI);
                            }
                            break;
                        case 9:
                            if ((selectedChord == "asharpmaj" ||
                                selectedChord == "bflatmaj") &&
                                (inversion == "Root" || inversion == "Second")) {
                                circle.arc(170, 60, 7, 0, 2 * Math.PI);
                            }

                            if ((selectedChord == "dmaj" ||
                                selectedChord == "dmin") &&
                                (inversion=="First" || inversion=="Second")) {
                                circle.arc(170, 60, 7, 0, 2 * Math.PI);
                            }
                            if ((selectedChord == "gmaj" ||
                                selectedChord == "gmin") &&
                                (inversion == "Root" || inversion == "First" || inversion == "Second")) {
                                circle.arc(170, 60, 7, 0, 2 * Math.PI);
                            }                                                                                   
                            if (selectedChord == "bmin" &&
                                (inversion == "Root" || inversion == "Second")) {
                                circle.arc(170, 60, 7, 0, 2 * Math.PI);
                            }      
                            break;
                        case 10:
                            if ((selectedChord == "amaj" ||
                                selectedChord == "amin") &&
                                inversion == "Root") {
                                circle.arc(190, 60, 7, 0, 2 * Math.PI);
                            }                            
                            if (selectedChord == "cmaj" &&
                                inversion == "Second") {
                                circle.arc(190, 60, 7, 0, 2 * Math.PI);
                            }
                            if ((selectedChord == "csharpmin" ||
                                selectedChord == "dflatmin") &&
                                inversion == "Second") {
                                circle.arc(190, 60, 7, 0, 2 * Math.PI);
                            }
                            if ((selectedChord == "emaj" ||
                                selectedChord == "emin") &&
                                (inversion == "First" || inversion == "Second")) {
                                circle.arc(190, 60, 7, 0, 2 * Math.PI);
                            }                                                                                   
                            
                            break;
                        case 11:
                            if ((selectedChord == "asharpmin" || 
                                 selectedChord =="asharpmaj" ||
                                selectedChord == "bflatmin" ||
                                selectedChord =="bflatmaj") &&
                                inversion == "Root") {
                                circle.arc(210, 60, 7, 0, 2 * Math.PI);
                            }                            
                            if ((selectedChord == "csharpmaj" ||
                                selectedChord == "dflatmaj") &&
                                inversion == "Second") {
                                circle.arc(210, 60, 7, 0, 2 * Math.PI);
                            }
                            if (selectedChord == "dmin" &&
                                inversion == "Second") {
                                circle.arc(210, 60, 7, 0, 2 * Math.PI);
                            }
                            if ((selectedChord == "fmaj" ||
                                selectedChord == "fmin") &&
                                (inversion == "First" || inversion == "Second")) {
                                circle.arc(210, 60, 7, 0, 2 * Math.PI);
                            }                            
                            break;
                        case 12:
                            if ((selectedChord == "dsharpmaj" ||
                                selectedChord == "eflatmaj") &&
                                (inversion == "Second")) {
                                circle.arc(230, 60, 7, 0, 2 * Math.PI);
                            }
                            if (selectedChord == "emin" &&
                                inversion == "Second") {
                                circle.arc(230, 60, 7, 0, 2 * Math.PI);
                            }
                            if ((selectedChord == "gmaj" ||
                                 selectedChord == "gmin") &&
                                (inversion == "First" || inversion == "Second")) {
                                circle.arc(230, 60, 7, 0, 2 * Math.PI);
                            }                                                        
                            break;
                        case 13:
                            if (selectedChord == "fmaj" &&
                                inversion == "Second") {
                                circle.arc(250, 60, 7, 0, 2 * Math.PI);
                            }
                            if ((selectedChord == "fsharpmin" ||
                                selectedChord == "gflatmin") &&
                                inversion == "Second") {
                                circle.arc(250, 60, 7, 0, 2 * Math.PI);
                            }
                            break;
                        case 14:
                            if (selectedChord == "gmaj" &&
                                inversion == "Second") {
                                circle.arc(270, 60, 7, 0, 2 * Math.PI);
                            }
                            break;
                        default:
                            break;
                    }
                }
            }

            ctx.fillStyle = "#0000FF";
            ctx.fill(circle);


            ctx.beginPath;

            //Render Black Key Indicators
            for (i = 0; i < 10; i++) {
                switch (i + 1) {
                    case 1:
                        circle.moveTo(20, 23); 
                        if ((selectedChord == "asharpmin" ||
                            selectedChord == "bflatmin") &&
                            inversion == "First") {
                            circle.arc(20, 23, 7, 0, 2 * Math.PI);
                        }                        
                        if (selectedChord == "amaj" &&
                            inversion == "First") {
                            circle.arc(20, 23, 7, 0, 2 * Math.PI);
                        }
                        if ((selectedChord == "csharpmaj" ||
                            selectedChord == "dflatmaj") &&
                            inversion == "Root") {
                            circle.arc(20, 23, 7, 0, 2 * Math.PI);
                        }
                        if ((selectedChord == "csharpmin" ||
                            selectedChord == "dflatmin") &&
                            inversion == "Root") {
                            circle.arc(20, 23, 7, 0, 2 * Math.PI);
                        }
                        
                        break;
                    case 2:
                        circle.moveTo(42, 23);
                        if (selectedChord == "bmaj" &&
                            inversion == "First") {
                            circle.arc(42, 23, 7, 0, 2 * Math.PI);
                        }
                        if (selectedChord == "cmin" &&
                            (inversion == "Root" ||
                             inversion == "First")) {
                            circle.arc(42, 23, 7, 0, 2 * Math.PI);
                        }
                        if ((selectedChord == "dsharpmaj" ||
                            selectedChord == "dsharpmin" ||
                            selectedChord == "eflatmaj" ||
                            selectedChord == "eflatmin") &&
                            inversion == "Root") {
                            circle.arc(42, 23, 7, 0, 2 * Math.PI);
                        }
                        if ((selectedChord == "gsharpmaj" ||                         
                            selectedChord == "aflatmaj") &&
                            (inversion == "First" || inversion == "Second")) {
                            circle.arc(42, 23, 7, 0, 2 * Math.PI);
                        }
                        if ((selectedChord == "gsharpmin" ||                            
                            selectedChord == "aflatmin") &&
                            (inversion == "Second")) {
                            circle.arc(42, 23, 7, 0, 2 * Math.PI);
                        }
                        
                        break;
                    case 3:
                        circle.moveTo(80, 23);
                        if ((selectedChord == "bmaj" ||
                            selectedChord == "bmin") &&
                            (inversion == "First" ||
                             inversion == "Second")) {
                            circle.arc(80, 23, 7, 0, 2 * Math.PI);
                        }                        
                        if (selectedChord == "dmaj" &&
                            (inversion == "Root" ||
                             inversion == "First")) {                            
                            circle.arc(80, 23, 7, 0, 2 * Math.PI);
                        }    
                        if ((selectedChord == "dsharpmin" ||
                            selectedChord == "eflatmin") &&
                            (inversion == "Root" ||
                            inversion == "First")) {
                            circle.arc(80, 23, 7, 0, 2 * Math.PI);
                        }
                        if ((selectedChord == "fsharpmaj" ||
                            selectedChord == "fsharpmin" ||
                            selectedChord == "gflatmaj" ||
                            selectedChord == "gflatmin") &&
                            inversion == "Root") {
                            circle.arc(80, 23, 7, 0, 2 * Math.PI);
                        }                        
                        break;
                    case 4:
                        circle.moveTo(100, 23);
                        if ((selectedChord == "csharpmaj" ||
                            selectedChord == "dflatmaj") &&
                            (inversion == "Root" ||
                             inversion == "First" ||
                             inversion == "Second")) {                            
                            circle.arc(100, 23, 7, 0, 2 * Math.PI);
                        }   
                        if ((selectedChord == "csharpmin" ||
                            selectedChord == "dflatmin") &&
                            (inversion == "Root" ||
                             inversion == "First" ||
                             inversion == "Second")) {
                            circle.arc(100, 23, 7, 0, 2 * Math.PI);
                        }
                        if (selectedChord == "emaj" &&
                            (inversion == "Root" ||
                             inversion == "First")) {
                            circle.arc(100, 23, 7, 0, 2 * Math.PI);
                        }
                        if (selectedChord == "fmin" &&
                            (inversion == "Root" ||
                             inversion == "First")) {
                            circle.arc(100, 23, 7, 0, 2 * Math.PI);
                        }
                        if ((selectedChord == "gsharpmaj" ||
                            selectedChord == "aflatmaj") &&
                            (inversion == "Root" ||
                             inversion == "First" ||
                             inversion == "Second")) {
                            circle.arc(100, 23, 7, 0, 2 * Math.PI);
                        }                                             
                        if ((selectedChord == "gsharpmin" ||
                            selectedChord == "aflatmin") &&
                            (inversion == "Root" ||
                             inversion == "Second")) {
                            circle.arc(100, 23, 7, 0, 2 * Math.PI);
                        }
                        break;
                    case 5:
                        circle.moveTo(120, 23); 
                        if ((selectedChord == "asharpmin" ||
                            selectedChord == "asharpmaj" ||                             
                            selectedChord == "bflatmin" ||
                            selectedChord == "bflatmaj") &&
                            (inversion == "Root" ||
                             inversion == "First" ||
                             inversion == "Second")) {
                            circle.arc(120, 23, 7, 0, 2 * Math.PI);
                        }                        
                                                          
                        if ((selectedChord == "dsharpmaj" ||
                             selectedChord == "dsharpmin" ||
                             selectedChord == "eflatmaj" ||
                             selectedChord == "eflatmin") &&
                            (inversion == "Root" ||
                             inversion == "First" ||
                             inversion == "Second")) {
                            circle.arc(120, 23, 7, 0, 2 * Math.PI);
                        }                           
                        if ((selectedChord == "fsharpmaj" ||
                            selectedChord == "gflatmaj") &&
                            (inversion == "Root" ||
                             inversion == "First")) {
                            circle.arc(120, 23, 7, 0, 2 * Math.PI);
                        }                                            
                        if (selectedChord == "gmin" &&
                            (inversion == "Root" ||
                             inversion == "First")) {
                            circle.arc(120, 23, 7, 0, 2 * Math.PI);
                        }
                        
                        break;
                    case 6:
                        circle.moveTo(162, 23);
                        if (selectedChord == "amaj" &&
                            (inversion == "Root" ||
                             inversion == "Second")) {
                            circle.arc(162, 23, 7, 0, 2 * Math.PI);
                        }
                        if ((selectedChord == "asharpmin" ||
                            selectedChord == "bflatmin") &&
                            (inversion == "Root" ||
                             inversion == "Second")) {
                            circle.arc(162, 23, 7, 0, 2 * Math.PI);
                        }
                        if ((selectedChord == "csharpmaj" ||
                             selectedChord == "dflatmaj" ||
                             selectedChord == "csharpmin") &&
                            (inversion == "First" ||
                             inversion == "Second")) {
                            circle.arc(162, 23, 7, 0, 2 * Math.PI);
                        }
                        if ((selectedChord == "fsharpmaj" ||
                            selectedChord == "fsharpmin" ||
                            selectedChord == "gflatmaj" ||
                            selectedChord == "gflatmin") &&
                           (inversion=="Root" || inversion=="First" || inversion=="Second")) {
                            circle.arc(162, 23, 7, 0, 2 * Math.PI);
                        }
                        
                        break;
                    case 7:
                        circle.moveTo(182, 23); 
                        if (selectedChord == "bmaj" &&
                            (inversion == "Root" ||
                             inversion == "Second")) {
                            circle.arc(182, 23, 7, 0, 2 * Math.PI);
                        }
                        if (selectedChord == "cmin" &&
                            inversion == "Second") {
                            circle.arc(182, 23, 7, 0, 2 * Math.PI);
                        }
                        if ((selectedChord == "dsharpmaj" ||
                            selectedChord == "dsharpmin" ||
                            selectedChord == "eflatmaj" ||
                            selectedChord == "eflatmin") &&
                            (inversion == "First" || inversion == "Second")) {
                                circle.arc(182, 23, 7, 0, 2 * Math.PI);
                        }
                      
                        if ((selectedChord == "gsharpmaj" ||
                            selectedChord == "aflatmaj") &&
                            inversion == "Root") {
                            circle.arc(182, 23, 7, 0, 2 * Math.PI);
                        }
                        if ((selectedChord == "gsharpmin" ||
                            selectedChord == "aflatmin") &&
                            (inversion == "Root" ||
                             inversion == "First")) {
                            circle.arc(182, 23, 7, 0, 2 * Math.PI);
                        }
                        break;
                    case 8:
                        circle.moveTo(221, 23); 
                        if ((selectedChord == "bmaj" ||
                            selectedChord == "bmin") &&
                            inversion == "Root") {
                            circle.arc(221, 23, 7, 0, 2 * Math.PI);
                        }                          
                        if (selectedChord == "dmaj" &&
                            inversion == "Second") {
                            circle.arc(221, 23, 7, 0, 2 * Math.PI);
                        }
                        if ((selectedChord == "dsharpmin" ||
                            selectedChord == "eflatmin") &&
                            inversion == "Second") {
                            circle.arc(221, 23, 7, 0, 2 * Math.PI);
                        }
                        if ((selectedChord == "fsharpmaj" ||
                            selectedChord == "fsharpmin" ||
                            selectedChord == "gflatmaj" ||
                            selectedChord == "gflatmin") &&
                            (inversion == "First" || inversion == "Second")) {
                            circle.arc(221, 23, 7, 0, 2 * Math.PI);
                        }
                       
                        
                        break;
                    case 9:
                        circle.moveTo(242, 23); 
                        if (selectedChord == "emaj" &&
                            inversion == "Second") {
                            circle.arc(242, 23, 7, 0, 2 * Math.PI);
                        }
                        if (selectedChord == "fmin" &&
                            inversion == "Second") {
                            circle.arc(242, 23, 7, 0, 2 * Math.PI);
                        }
                        if ((selectedChord == "gsharpmin" ||
                            selectedChord == "aflatmin") &&
                            (inversion == "First")) {
                            circle.arc(242, 23, 7, 0, 2 * Math.PI);
                        }
                        break;
                    case 10:
                        circle.moveTo(262, 23); 
                        if ((selectedChord == "fsharpmaj" ||
                            selectedChord == "gflatmaj") &&
                            (inversion == "Second")) {
                            circle.arc(262, 23, 7, 0, 2 * Math.PI);
                        }
                        if (selectedChord == "gmin" && inversion == "Second") {
                            circle.arc(262, 23, 7, 0, 2 * Math.PI);
                        }
                        break;
                    default:
                        break;
                }
            }

            ctx.fillStyle = "#0000FF";
            ctx.fill(circle);

        }

        function GetElementById(thiselement) {
            return document.getElementById(thiselement)
        }

        function GetInversion() {
            if (GetElementById("RadioRoot").checked == true) {
                return "Root";
            }
            if (GetElementById("RadioFirst").checked == true) {
                return "First";
            }
            if (GetElementById("RadioSecond").checked == true) {
                return "Second";
            }
        }

    </script>

</body>
</html>
